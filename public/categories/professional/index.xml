<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>professional on Aaron's Blog</title><link>https://www.aaronheld.com/categories/professional/</link><description>Recent content in professional on Aaron's Blog</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Sat, 29 Sep 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://www.aaronheld.com/categories/professional/index.xml" rel="self" type="application/rss+xml"/><item><title>Practical Hypermedia for our post ORM world</title><link>https://www.aaronheld.com/post/practical-hypermedia/</link><pubDate>Sat, 29 Sep 2012 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/practical-hypermedia/</guid><description>
&lt;p>This post is for people who have started learning about hypermedia and feel that it over complicates the elegance of REST. When I started hearing about hypermedia I felt it was adding architecture acrobatics for the sake of buzzword enhancement. After having applied these techniques in a few places not only have a drunk the cool aid, I've setup a stand beside my desk. I look back and try to understand where my initial negative reaction came from. I realized that many of the examples were trivial and did not demonstrate the reality of what hypermedia brings to the table.&lt;/p>
&lt;p>The main epiphany I'd like to share is that REST has proven itself as the best way to take an ORM focused approach to an API and Hypermedia is proving itself as the best way to take a business process approach to an API.&lt;/p>
&lt;p>A key aspect of Hypermedia that I don’t see used often enough is the notion of a template. The template portion of the spec calls for the API to send down to the client the parameters necessary to call the API itself. This notion is akin to how you load a web page with a blank form and then submit the form directly. You don’t post to twitter by typing a bunch of stuff into the url, you load twitter first and then fill in a textarea.&lt;/p>
&lt;p>Essentially in my early experiments I was writing XML api payloads where the template portion was basically an HTML form that the client could decompose and render. The problem that I felt was that I was basically writing a full old school web application that happened to send XML rather than HTML back to the client. Then my client had extra complexity in parsing the XML and implementing all the UX rules to get the client looking and feeling right. I also had to build 2 webapps that both were basically doing the same thing, view, validation and calling a service.&lt;/p>
&lt;p>Now lets take a look at doing this for real using AngularJS, JSON and a deadline.&lt;/p>
&lt;p>The business case: Our sales team has access to a report of customer service change activity. Current use cases include a simple sales report to show and total the usage of a sales rep's customers on a monthly basis.&lt;/p>
&lt;p>An initial implementation focusing around the orm simply used Linq against Entity Framework to retrieve the data from a MSSQL database.&lt;/p>
&lt;p>Before we can generate the report we need to present an input form to the user. The design calls for a &amp;quot;Sales Rep&amp;quot; drop down list which will allow us to report on activity by sales rep. In an ORM world generating this drop down is easy enough, throw up a few classes against the employees table, query based on role, and render that to HTML on the server.&lt;/p>
&lt;p>In our razor/asp/whatever template there is some code along the lines of:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>&amp;lt;select name=&amp;#34;salesrep&amp;#34;&amp;gt;
&lt;span class="ln">2&lt;/span> &amp;lt;% foreach rep in salesreps %&amp;gt;&amp;lt;option value=&amp;#34;&amp;lt;%= rep.id %&amp;gt;&amp;#34;&amp;gt;&amp;lt;%end%&amp;gt;
&lt;span class="ln">3&lt;/span>&amp;lt;/select&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Easy!&lt;/p>
&lt;p>Next iteration we are asked to restrict reports such that a rep can only see their own customers, but the sales manager can see all customers.&lt;/p>
&lt;p>Now the code looks something like:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>&amp;lt;select name=&amp;#34;salesrep&amp;#34;&amp;gt;
&lt;span class="ln">2&lt;/span> &amp;lt;% if User.hasRole(Roles.SALESMGR) %&amp;gt;
&lt;span class="ln">3&lt;/span> &amp;lt;% foreach rep in salesreps %&amp;gt;&amp;lt;option value=&amp;#34;&amp;lt;%= rep.id %&amp;gt;&amp;#34;&amp;gt;&amp;lt;%end%&amp;gt;
&lt;span class="ln">4&lt;/span> &amp;lt;% else %&amp;gt;
&lt;span class="ln">5&lt;/span> &amp;lt;option value=&amp;#34;&amp;lt;%=User.id%&amp;gt;&amp;#34;&amp;gt;User.Name&amp;lt;/option&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ok so this could be refactored along the lines of&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>&amp;lt;select name=&amp;#34;salesrep&amp;#34;&amp;gt;
&lt;span class="ln">2&lt;/span> &amp;lt;% foreach rep in salesreps\_Based\_on\_Role %&amp;gt;&amp;lt;option value=&amp;#34;&amp;lt;%= rep.id %&amp;gt;&amp;#34;&amp;gt;&amp;lt;%end%&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The relevant point here is that the salesrep list restrictions must be handled in the view based on this use case.&lt;/p>
&lt;p>Once that work is done we need to generate the report data itself. Building a restful endpoint for this sounds like a good idea and is an incremental effort for a reusable data source. Most people (including myself) would build out that restful endpoint and use it to generate the data. Maybe put some logic in the server side controller that will parse the HTML submission form, apply security, and they make the restful call.&lt;/p>
&lt;p>This restful approach could be a generic &amp;quot;SalesRep’ list endpoint and move the filtering logic there. Since we also need a list of sales reps for things like &amp;quot;forwarding a customer’ that new end point would need to know how it is going to be used before it is called. So the CONTEXT of how the API is called matters. Unfortunately in a stateless world the API call does not have the context unless it is given a hint by the client.&lt;/p>
&lt;p>Additionally we need to implement this logic against the report generation as well, otherwise anyone could modify the http request and generate a report for a salesrep against our business requirements. The linq query (psudocode) could look like:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>//find all the records
&lt;span class="ln">2&lt;/span>IEnumerable&amp;lt;ServiceChanges&amp;gt; servicechanges =
&lt;span class="ln">3&lt;/span> from records in recordsORM
&lt;span class="ln">4&lt;/span> select record where SalesRep = {0};
&lt;span class="ln">5&lt;/span>// and filter based on role
&lt;span class="ln">6&lt;/span>if !User.rolein(Roles.SALESMGR) {
&lt;span class="ln">7&lt;/span> servicechanges = servicechanges.Where(records.salesrep.id = {0},User.id);
&lt;span class="ln">8&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In our orm world, even if we we create restful services such as &amp;quot;/api/servicechanges/’ and &amp;quot;/api/salesrep/’ we still have two bits of unrelated code that need to be kept in sync. The view is ultimately coupled to the api call.&lt;/p>
&lt;p>The ORM layer has now served to couple the database directly to the view. dropdowns are created against the salesreps_Based_on_Role object which is coupled to the employee tables and sprikled with business logic for every view it may be called for. Not a very reusable pattern simply because it is called by the client WITHOUT THE CONTEXT of how it will be used.&lt;/p>
&lt;p>Older developers will remember the good old stateful days of foxbase and objectpal where these use cases would be trivial. Just implement row level security into the table and your salesrep list is a view such as:&lt;/p>
&lt;p>reportview = select * from serivceactivity join salesrep.id in ALLOWED_IDS_BASED_ON_ROLE&lt;/p>
&lt;p>then you bind a drop-down list to &amp;quot;select distinct salesrep.id from reportview&amp;quot;&lt;/p>
&lt;p>this antiquated approach has the benefit of both the form construction as well as the report generation being based off the sames business rules - row level restrictions. Sometimes I miss the stateful, context rich, execution environment of an old school desktop application.&lt;/p>
&lt;h3 id="hypermedia-approach">Hypermedia approach&lt;/h3>
&lt;p>How does hypermedia lend itself to a cleaner solution?&lt;/p>
&lt;p>It brings context back to the conversation by preserving the state at the API level.&lt;/p>
&lt;p>This is what HATEOS &lt;a href="http://en.wikipedia.org/wiki/HATEOAS">http://en.wikipedia.org/wiki/HATEOAS&lt;/a> , Hypermedia As an Engine Of State, means.&lt;/p>
&lt;p>A key tenet of hypermedia is that the client does not need any prior knowledge in order to make the api call. This is where common sense needs to balance reality. I don’t expect to build a magic client that can do anything, but within the scope of a particular problem domain we can limit the need of the client to make multiple calls in order to &amp;quot;setup’ the parameters necessary.&lt;/p>
&lt;p>In the example of the sales rep situation, our client still need to make a call to the server before calling the api. In this case however it calls the /salesrep/ service itself and retrieves the hypermedia template. (yes this is akin to WSDL, if WSDL was easier to understand and extensible). When the server side code is calling for the list of salesreps for the client to render it has the context of how the data will be called, as well as the knowing the user/role based security model to operate under.&lt;/p>
&lt;p>Our hypermedia design is based on a combination of JSON+collection media type as published by Mike Amundsen &lt;a href="http://www.amundsen.com/media-types/collection/">http://www.amundsen.com/media-types/collection/&lt;/a> blended with what we have experienced using the indispensable JIRA api &lt;a href="http://docs.atlassian.com/jira/REST/latest/">http://docs.atlassian.com/jira/REST/latest/&lt;/a>.&lt;/p>
&lt;p>JSON+collection calls for a query template. This query template is where the api will describe to the client how to make a query or find data.&lt;/p>
&lt;p>In my case it looks something like:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln"> 1&lt;/span>&amp;#34;queries&amp;#34; : \[{
&lt;span class="ln"> 2&lt;/span> &amp;#34;href&amp;#34; : &amp;#34;/api/saleslog/search&amp;#34;,
&lt;span class="ln"> 3&lt;/span> &amp;#34;rel&amp;#34; : &amp;#34;search&amp;#34;,
&lt;span class="ln"> 4&lt;/span> &amp;#34;data&amp;#34; : \[
&lt;span class="ln"> 5&lt;/span> {&amp;#34;name&amp;#34; : &amp;#34;startDate&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;date&amp;#34;, &amp;#34;prompt&amp;#34;:&amp;#34;Start date for report&amp;#34;},
&lt;span class="ln"> 6&lt;/span> {&amp;#34;name&amp;#34; : &amp;#34;endDate&amp;#34;, &amp;#34;type&amp;#34;:&amp;#34;date&amp;#34;, &amp;#34;prompt&amp;#34;:&amp;#34;End date for report&amp;#34;},
&lt;span class="ln"> 7&lt;/span> {&amp;#34;name&amp;#34; : &amp;#34;salesrep&amp;#34;,
&lt;span class="ln"> 8&lt;/span> &amp;#34;type&amp;#34;:&amp;#34;select&amp;#34;,
&lt;span class="ln"> 9&lt;/span> &amp;#34;required&amp;#34;: true,
&lt;span class="ln">10&lt;/span> &amp;#34;options&amp;#34;:\[
&lt;span class="ln">11&lt;/span> {&amp;#34;name&amp;#34;:&amp;#34;B. Hartnell&amp;#34;, value:1},
&lt;span class="ln">12&lt;/span> {&amp;#34;name&amp;#34;:&amp;#34;J. Pertwee&amp;#34;, value:3},
&lt;span class="ln">13&lt;/span> {&amp;#34;name&amp;#34;:&amp;#34;P Troughton&amp;#34;, value:2},
&lt;span class="ln">14&lt;/span> {&amp;#34;name&amp;#34;:&amp;#34;T Baker&amp;#34;, value:4},
&lt;span class="ln">15&lt;/span> {&amp;#34;name&amp;#34;:&amp;#34;D Tennant&amp;#34;, value:10}
&lt;span class="ln">16&lt;/span> \]
&lt;span class="ln">17&lt;/span> }
&lt;span class="ln">18&lt;/span> \]
&lt;span class="ln">19&lt;/span> }\]
&lt;/code>&lt;/pre>&lt;/div>&lt;p> &lt;/p>
&lt;p>To render that into a form using angular was remarkably easy:&lt;/p>
&lt;p>&lt;a href="http://fiddle.jshell.net/aaronheld/kQ8K3/" title="Fiddle this">http://fiddle.jshell.net/aaronheld/kQ8K3/&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://angularjs.org/">Angularjs&lt;/a> allows me to bind the client side state to the API and handles keeping the DOM and view in sync with the model.  More on that later (hint: synergy!)&lt;/p>
&lt;p>The fun part being that the client does not have to know anything about the security concerns around &amp;quot;salesRep’. The way that the drop down is rendered is something along the lines of&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span> &amp;lt;select ng:switch-when=&amp;#34;select&amp;#34; ng:model=&amp;#34;field.value&amp;#34; &amp;gt;
&lt;span class="ln">2&lt;/span> &amp;lt;option ng:repeat=&amp;#34;option in field.options&amp;#34; value=&amp;#34;{{option.value}}&amp;#34;&amp;gt;{{option.name}}&amp;lt;/option&amp;gt;
&lt;span class="ln">3&lt;/span> &amp;lt;/select&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can google for some robust form builder implementations but with a good template representation they do not seem necessary for my needs. &lt;a href="http://007design.com/formular/index.html">http://007design.com/formular/index.html&lt;/a> was the inspiration for this approach.&lt;/p>
&lt;p>the final step is almost anticlimactic, for the client to render the drop down with security all that has to happen is that the API sends back a salesRep list with one option.&lt;/p>
&lt;p>From here I feel that we have an agile design. With suitable testing we have a confident implementation. So far all of the iterative updates have felt easy. Yesterday we were discussing changing the UX so that if there is one option we don’t render a select box (since there is no selection). In that case we simply change the angular form logic in the browser, where UX view logic belongs. Security changes and additional query logic is based in the server/API where it belongs.&lt;/p>
&lt;p>Next I’ll write up how we return the row items of the report and leverage hypermedia links to allow the client to perform operations on items based on business rules.&lt;/p>
&lt;p>This will all lead up to demonstrating how this an API first approach (rather then object model based design) will allow me to replace all of the search/list/operate work queues in my enterprise with a consistent pattern and greatly simplified software stack.&lt;/p>
&lt;p>If you are in Philly this November I'm thinking about a code walkthough at &lt;a href="http://2012.barcampphilly.org/">http://2012.barcampphilly.org/&lt;/a> See you there!&lt;/p></description></item><item><title>Embracing change</title><link>https://www.aaronheld.com/post/embracing-change/</link><pubDate>Sat, 03 Mar 2012 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/embracing-change/</guid><description>
&lt;p>It's a month past due so here is my obligatory &amp;quot;I changed my job&amp;quot; post.&lt;/p>
&lt;p>Over the last nearly 8 years at Comcast as part of the 'Online' group and later as founding member of mighty &lt;a href="http://blog.comcast.com/comcast-interactive-media-cim/" title="CIM @ Voices">Comcast Interactive Media&lt;/a> I've made many business connections, met a number of excellent peers and forged a few relationships that will last a lifetime.&lt;/p>
&lt;p>As a happily married 40+ dad with mortgage and college payments I often feel over the hill with regards to blogging and living out loud. As a Manager with a sometimes disproportional ego I also felt an obligation to 'disappear' for some time in order to give &lt;a href="https://twitter.com/#!/tomjbarker">@tomjbarker&lt;/a> room to make the team his own. I've no doubt that he will take what we started to the next level.&lt;/p>
&lt;p>When I joined Comcast we had acquired a portal using technology from the last millennium (JSP, coded like it was 1999). It was hosted by a company we competed with and after 3 months I gave up trying to get a stable build from the source code. We merged with a development team who hired java test writers because 'real' developers don't waste time writing unit tests. 2 key executives took this mess and in what I have to call a 'visionary' move decided to craft a 'web development' culture within Comcast. I'll always be indebted to Sam Schwartz for doing whatever he did to convince Comcast that splitting off a wholly owned subsidiary as a web shop would be a good idea. That gave us the opportunity and Charlie Herrin was the one whose personality and direction shaped our day to day work.&lt;/p>
&lt;p>The early days were exciting and we took an empty room and filled it with whirring servers powering a living architecture that grew up to power &lt;a href="http://xfinity.com">xfinity.com&lt;/a> and &lt;a href="http://xfinityTV.comcast.net">xfinityTV.comcast.net&lt;/a> (The architecture we used was this new thing called REST wrapping a key based XML document store). We took a team who didn't understand testing in an untestable environment to a group passionate around TDD.  We introduced Java/Oracle biased executives to the wonders of S3, Node and Rails. Code bases with 0 tests now have thousands of meaningful ones. We went from developers oncall 24/7 and my phone ringing 3 nights a week to me sitting in the park with my kids as the software absorbed feed failures and gracefully degraded.&lt;/p>
&lt;p>I was the architect (along with &lt;a href="https://twitter.com/#!/kmartino">@kmartino&lt;/a>) and a primary coder of the software stack and trained a team to support it. That team has surpassed me in every way as coders.  The level of individual talent is staggering.  A CIM jr engineer would be a Sr at any other company in Philly.&lt;/p>
&lt;p>The business models of CIM were fairly mature and the products were very much in an incremental growth phase.&lt;/p>
&lt;p>At this point I got a call from a headhunter looking for someone to lead a development team for an Energy company.  I was skeptical because I didn't really get the new competitive energy market and didn't really trust the companies selling it.  When I met some of the marketing folk they hooked with me with a simple pitch.  Nobody really knows how to market energy and &lt;a href="http://www.energypluscompany.com">Energy Plus&lt;/a> is going to figure it out.  They have a business team that is incredibly agile and data driven with not an ego driven decision in sight.&lt;/p>
&lt;p>As a new company they had much of their infrastructure built by waves of vendors who made a hash of their codebase.  They have made a real investment in IT to make us part of their competitive advantage and I'm looking forward to the challenges.  Right now companies build a plant and sell energy, in the future they will have to market it.  Much like Comcast formed CIM to figure out how to do web development, Energy Plus was acquired by NRG in order to figure out how to market energy.&lt;/p>
&lt;p>They are doing business iterations and retrospectives in order to invest in what works and adjust what is not optimal.&lt;/p>
&lt;p>Nothing hammered how good they are  into my head as much as my first meeting with our finance team.  They were asking for development help for some statistics they were compiling.  I'd heard they were trying to use python to download some data and analyze it in excel.  I walked in thinking I'm the big python expert and with a passing knowledge of '&lt;a href="http://www.r-project.org/">R&lt;/a>' was going to be able to help them. They described the flow of downloading, parsing, processing, analyzing and explained it was a manual process done daily.  I asked how long it takes them thinking I'm about to save some poor human hours a day.  They said about 1omin since its all scripted.  They just have to run a batch file.  Wow, I know developers that don't take time to automate like this.  The downloading is solid python analyzing is hardcore R.  They are professional enough to come to me to 'operationalize' this as the next step.  There really are no 'B' players here and when someone on the business side asks me for 'help' it is for real.&lt;/p>
&lt;p>So in short the only thing keeping us from being fully agile is engineering, which means the only barrier to agile is ME getting it done.&lt;/p>
&lt;p>And for this story I have no blockers ;)&lt;/p></description></item><item><title>Using python-dulwich to load any version of a file from a local git repo</title><link>https://www.aaronheld.com/post/using-python-dulwich-to-load-any-version-of-a-file-from-a-local-git-repo/</link><pubDate>Sat, 02 Apr 2011 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/using-python-dulwich-to-load-any-version-of-a-file-from-a-local-git-repo/</guid><description>
&lt;p>On Monday we are kicking off an innovation week (more to come on that topic) and I've devised a little project that includes nearly every buzzword I'm interested in.&lt;/p>
&lt;p>I'm spending some time doing some technical spikes to see what is possible and I found a need to load a particular file from a git repo given the path and tree hash.&lt;/p>
&lt;p>I grabbed my trusty python, dulwich (native python-git library) and gave it a shot. After a few minutes writing complicated looking recursive code I jumped over to irc where the friendly author pointed me to a convenience function that does what I needed.&lt;/p>
&lt;p>Here is the short answer:&lt;/p>
&lt;p>from dulwich.repo import Repo
from dulwich.object_store import tree_lookup_path&lt;/p>
&lt;p>r = Repo('/Documents/projects/gitdep/rails')
def get_file(tree, path):
(mode,sha) = tree_lookup_path(r.get_object,tree,path)
return r[sha].data&lt;/p>
&lt;p>tree = '7e7331fce169bbe1d6be71a30c1e1f7ab2e6ceba'
path = 'activemodel/examples/validations.rb'&lt;/p>
&lt;p>print get_file(tree,path)&lt;/p>
&lt;p>This gives me a rails validation file from last year. Nothing special about this file, I just find the rails git repo an interesting playground for git experimentation.&lt;/p></description></item><item><title>the measure of Awesome</title><link>https://www.aaronheld.com/post/the-measure-of-awesome/</link><pubDate>Sun, 23 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/the-measure-of-awesome/</guid><description>
&lt;p>Development at work has been trending well in the new year and the team is getting excited about our formal incorporation of practices such as TDD and pair programming.&lt;/p>
&lt;p>I'm definitely perceive an intangible benefit in culture and fun. With a full test suite and engaged developers working out loud coding is fun again.&lt;/p>
&lt;p>I give a lot of thought to developer efficiency and generating metrics around our output is very important to me.  We are at a point in this iteration where I have too many stories in progress and it is taking a few extra days to get work completed and accepted.  This does not concern me greatly since this is a new team and it usually takes a few turns to get into a rhythm.  I was walking down the hall and one of developers said that things are going 'Awesome'.  I said &amp;quot;&lt;em>Great, but &lt;strong>awesome&lt;/strong> is not a metric&lt;/em>&amp;quot;.&lt;/p>
&lt;p>Since then he and the rest of the team have risen to the challenge and we have some demonstrable facts in low bug counts and high numbers of actual hours (hands on keyboard time) logged.&lt;/p>
&lt;p>I'll have a clue in a few weeks and 'know' in a few iterations that TDD and pair programming have raised productivity in this team.  For right now I do &lt;em>think&lt;/em> things have improved and &lt;em>I feel&lt;/em> that our velocity is going to increase.  &lt;em>IMHO&lt;/em> my personal job satisfaction has increased.&lt;/p>
&lt;p>So I may have been nieve last week in saying awesome is not a metric.  I'm now thinking that awesome must a metic with a correlation to both employee retention and code quality.  We simply have not developed the tools to measure and understand this thing we call 'awesome'.  I can only observe the secondary effects that occur when there is &amp;quot;awesome&amp;quot; within a team.&lt;/p>
&lt;p>This is kind of like gravity.  Science can only measure the effects of gravity but you can't run without it.  And running beats floating back and forth aimlessly any day.....&lt;/p></description></item><item><title>BarCamp Philly 2010 Summary - Opendata and beyond</title><link>https://www.aaronheld.com/post/barcamp-philly-2010-summary-opendata-and-beyond/</link><pubDate>Wed, 17 Nov 2010 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/barcamp-philly-2010-summary-opendata-and-beyond/</guid><description>
&lt;p>When wrapping up the VIm talk @&lt;a href="http://twitter.com/trevmex">trevmex&lt;/a> mentioned that people share their &lt;a href="https://github.com/search?type=Everything&amp;amp;language=vim&amp;amp;q=dotfile&amp;amp;repo=&amp;amp;langOverride=&amp;amp;x=0&amp;amp;y=0&amp;amp;start_value=1">dotFiles on github&lt;/a>.  This blew my mind.  I can sit in front of anyones desk and start using their eclipse and immediately be productive.  The secret to VIm is the years of refactoring the configuration and shortcuts, known as the dotFiles.  You probably couldn't even execute a mapped command on my machine since I &lt;a href="http://vimdoc.sourceforge.net/htmldoc/map.html#mapleader" title="Map your leader">map the leader&lt;/a> based on my keyboard.&lt;/p>
&lt;p>I'm used to reading about VIm plugins and tips on sites like &lt;a href="http://www.vim.org/">http://www.vim.org/&lt;/a> but I never really thought about the power of collaborating on the ultimate VIm config via the forking, pushing and pulling that is github.  The idea of forking someones config and :%s/leader='\'/leader='`'/g is really compelling.&lt;/p>
&lt;p>So I got to my next session, Philly Opendata, a bit early and powered up the University of the Arts guest wireless to see what this gitHub dotfile concept is really about and could not connect. After an hour of discussing how VIm keeps your hands on keyboard and head focused on the task I'm again reduced to a mouse clicking consumer wondering where the button is that will get my osx to work, or give me a clue as to why it won't.  I would have searched for &amp;quot;iwspy on osx&amp;quot; but without wireless it would have been a short trip.&lt;/p>
&lt;p>The point of this segue is that &lt;a href="https://twitter.com/mofro">Maurice&lt;/a> noticed my plight and leaned over with the security settings to his mifi app to get me out of the 80's.   That has never happened at any formal show I've been to.  He had signal and was willing to share.&lt;/p>
&lt;p>Turns out Philadelphia has &lt;a href="http://twitter.com/opendataphilly">data&lt;/a> and is also willing to share.&lt;/p>
&lt;p>Getting access to this data is important for so many reasons.  Before I talk about the social importance of opendata I have to step back and comment that crunching huge datasets and experimenting with bizarre visualizations is the type of fun that drew me to computers in the first place.  Whether plotting Fourier power transforms of breathing sheep or number of potholes per coffee shop there is something exciting about creating a unique perspective on otherwise boring or overwhelmingly complex data.&lt;/p>
&lt;p>Having transparency into our government machine is really just a continuation of our need for independent newspapers.  Thomas Jefferson is often quoted as saying that &lt;em>&lt;strong>Democracy depends upon an informed population&lt;/strong>&lt;/em>.&lt;/p>
&lt;p>The city of Philadelphia has committed to releasing 311, GIS and crime data. There was a very lively discussion at this session around the types of apps we could build, the benefits that the city will reap and most importantly &lt;em>WHEN&lt;/em> it will launch.&lt;/p>
&lt;p>This was all good and exciting conversation and one particular thread stuck with me long after the session ended.  We talked about how we can audit the data and ensure that it is used properly and not abused.&lt;/p>
&lt;p>We live in an age when a &lt;a href="http://blog.compete.com/2007/02/16/colbert-report-wikipedia/">comedian can save the elephants&lt;/a> by editing a wiki page.  When I was a kid I was raised to believe that reporters were 'investigative journalists' and dug deep to get the facts.  I grew up just a few miles from where Geraldo Rivera got his start with an acclaimed expose of a &lt;a href="http://en.wikipedia.org/wiki/Willowbrook_State_School#More_scandals_and_abuses">mental institution&lt;/a> that resulted in action being taken.  I was not until I got older and became exposed to Fox and the Daily show that I'd realized how seemingly sane people could look at the same data information and draw such dramatically different conclusions.  (Actually I learned that in grad school.  &amp;quot;Number-smithing&amp;quot; and &amp;quot;creative graphing&amp;quot; are required classes for practicing engineers.  There was a similar class for the business students, but it skipped the numbers part altogether.)&lt;/p>
&lt;p>It would be really easy for me to take all the pothole data and plot it on google maps.  A little massaging could show my street as having a few extra's and maybe I'll even 'fix' a few in the other neighborhoods.  People will see my app and maybe my street gets a little bump in priority.&lt;/p>
&lt;p>Visualization is a powerful tool and data of this magnitude will always be analyzed with bias.  Even a &lt;a href="http://radar.oreilly.com/2010/08/visualization-as-journalism.html">simple flow chart describing the new health care policy&lt;/a> can be warped towards an agenda.&lt;/p>
&lt;p>Opendata puts us all on a level playing field.  I'm looking forward to the apps and visualizations coming out.  I will be disappointed if we wind up with a  liberal and a conservative app mirroring our polarized two party system.  I personally feel that there is a responsibility in the hands of the designers and developers to attack this data and ensure that the people of Philadelphia have multiple avenues of getting accurate facts.&lt;/p>
&lt;p>The first tenant of the &lt;a href="http://www.ieee.org/membership_services/membership/ethics_code.html">IEEE code of ethics&lt;/a> hints at the damage we can do here.&lt;/p>
&lt;blockquote>
&lt;p>1. to accept responsibility in making decisions consistent with the safety, health and welfare of the public, and to disclose promptly factors that might endanger the public or the environment;&lt;/p>
&lt;/blockquote>
&lt;p>As far back as the 12th century the Rabbi Maimonides wrote a Physicians oath with another line that I find appropriate:&lt;/p>
&lt;blockquote>
&lt;p>May the love for my art actuate me at all time; may neither avarice nor miserliness, nor thirst for glory or for a great reputation engage my mind; for the enemies of truth and philanthropy could easily deceive me and make me forgetful of my lofty aim of doing good&lt;/p>
&lt;/blockquote>
&lt;p>A Doctor's specialized knowledge and training puts his actions and opinions under a special light with regard to ethics.  Typically computer professionals live by a 'do no harm' credo as well, but our actions were usually bounded by our working domain.  With open data and blogs we can now use our skills and training for the betterment of democracy or as a lever to move a personal agenda.&lt;/p>
&lt;p>Now that I am ready to wield this data in the name of Democracy and Truthiness I'm headed over to listen to &lt;a href="http://twitter.com/tomjanofsky">Tom Janofsky&lt;/a> talk about his experiences with Cloud Computing on EC2.&lt;/p>
&lt;p>After all, once this great Philly data is out I'm going to need that elastic processing power....&lt;/p></description></item><item><title>Jugaad - India's Agile style</title><link>https://www.aaronheld.com/post/jugaad-indias-agile-style/</link><pubDate>Sun, 14 Nov 2010 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/jugaad-indias-agile-style/</guid><description>
&lt;p>I’ve been reading about India’s concept of Jugaad, possibly poised to enter our buzzword vocabulary since it came up in the context of what &lt;a href="http://www.nytimes.com/roomfordebate/2010/11/07/what-obama-can-learn-from-india">Obama can learn from that country&lt;/a>.&lt;/p>
&lt;p>Where the &lt;a href="http://agilemanifesto.org/">Agile Manifesto&lt;/a> starts with “Individuals and Interactions” the &lt;a href="http://blogs.hbr.org/cs/2010/01/jugaad_a_new_growth_formula_fo.html">Harvard Business Review&lt;/a> kicks off Jugaad with “Thrift not Waste”.&lt;/p>
&lt;p>All too often I’ve seen Agile work because a scarcity of resources (money, time or knowledge) pushed an otherwise waterfall loving group into giving Agile a shot. The tenants of Jugaad resonate with me as a more general philosophy about how to get things accomplished then Agile’s focus on “working software”.&lt;/p>
&lt;p>&lt;strong>Agile Manifesto&lt;/strong>&lt;/p>
&lt;p>&lt;em>We are uncovering better ways of developing software by doing it and helping others do it. Through this work we have come to value&lt;/em>&lt;/p>
&lt;p>Individuals and interactions over processes and tools Working software over comprehensive documentation&lt;/p>
&lt;p>Customer collaboration over contract negotiation&lt;/p>
&lt;p>Responding to change over following a plan&lt;/p>
&lt;p>&lt;strong>Jugaad (quoted from &lt;a href="http://blogs.hbr.org/cs/2010/01/jugaad_a_new_growth_formula_fo.html">HBR&lt;/a>):&lt;/strong>&lt;/p>
&lt;p>&lt;em>The Hindi term roughly translates as “overcoming harsh constraints by improvising an effective solution using limited resources”. We call it the art of creative improvisation.&lt;/em>&lt;/p>
&lt;p>Thrift not waste. Tackle scarcity.&lt;/p>
&lt;p>Inclusion, not exclusion. diversity of communities&lt;/p>
&lt;p>Bottom-up participation, not top-down command and control.&lt;/p>
&lt;p>Flexible thinking and action, not linear planning.&lt;/p>
&lt;p>It feels like we are talking about the same thing. Get a team together and empower them to solve the necessary problem. Nowhere is there a concept of ‘throw money at the problem’ or ‘hire more consultants’. Plan for change and change plans in order to achieve success.&lt;/p>
&lt;p>I’m on a barcamp high today. We could have had a conference with a big budget, focused our marketing on the demographic of web designers/developers, planned it from an executive committee and wrote a gant chart tracking the critical path from start to finish. It would have been a big show, but it would not have been barcamp and it would not have been awesome.&lt;/p>
&lt;p>Software engineers learned that top down does not work. Indian’s entrepreneurs espousing that top down does not work.&lt;/p>
&lt;p>Spend a few moments today to consider if you think top down, centralized control of food production is a good idea: &lt;a href="http://foodfreedom.wordpress.com/2010/04/24/s-510-is-hissing-in-the-grass/">http://foodfreedom.wordpress.com/2010/04/24/s-510-is-hissing-in-the-grass/&lt;/a>&lt;/p></description></item><item><title>Specialization is for Insects part II</title><link>https://www.aaronheld.com/post/specialization-is-for-insects-part-ii/</link><pubDate>Mon, 20 Jul 2009 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/specialization-is-for-insects-part-ii/</guid><description>
&lt;p>Came across the Heinlein quote again today: &lt;a href="http://personalmba.com/core-human-skills">http://personalmba.com/core-human-skills&lt;/a>&lt;/p>
&lt;p>this time in the context of a &amp;quot;Business&amp;quot; professional. There is another point made in the blog post about how to be successful. You can either be an expert in a narrow field (top 1%) or be very good (top 25%) in multiple fields. The author calls these &amp;quot;Core Human Skills&amp;quot;&lt;/p>
&lt;p>This is worth a read, and I will definitely abstract these concepts out in my interview process.&lt;/p>
&lt;p>&lt;a href="http://www.aaronheld.com/post/specialization-is-for-insects">http://www.aaronheld.com/post/specialization-is-for-insects&lt;/a>&lt;/p></description></item><item><title>Project Management is critical for Useless projects</title><link>https://www.aaronheld.com/post/project-management-is-critical-for-useless-projects/</link><pubDate>Fri, 17 Jul 2009 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/project-management-is-critical-for-useless-projects/</guid><description>
&lt;p>This about this:&lt;/p>
&lt;p>If you have a project with an estimated cost of $1MM and you expect a return of $1.1MM then strict governance and process controls are critical to success. A variance of 10% will take you from profitability to a loss.&lt;/p>
&lt;p>If you have a project with the same estimated $1MM cost but an expected return of $50MM then project management is less critical. a 10% variance will not really matter in the big picture. Given my fictional example even a 100% to 500% cost overrun could happen and keep the &amp;quot;success&amp;quot; label.&lt;/p>
&lt;p>So the take home message is that project management is critical for useless projects. If you have a great project then even with terrible project management you will still be successful.&lt;/p>
&lt;p>In my own experience we run a might tighter governance on the weekly 'Features and Maintenance' sprint team as opposed to the month long 'bigger feature' sprint.&lt;/p>
&lt;p>So put your bad PMs on key initiatives and shuffle the best to the menial tasks.&lt;/p>
&lt;p>And get yourself on a 'no-fail' path by ensuring that all your projects have large ROI with logarithmic (hockey stick) growth.&lt;/p>
&lt;p>I love reading articles by fearless people with 'tenure' at IEEE!&lt;/p>
&lt;p>&lt;a href="http://www2.computer.org/portal/web/computingnow/0709/whatsnew/software-r">http://www2.computer.org/portal/web/computingnow/0709/whatsnew/software-r&lt;/a>&lt;/p></description></item><item><title>Designing a new Infrastructure is like buying a new car</title><link>https://www.aaronheld.com/post/designing-infrastructure-buying-car/</link><pubDate>Wed, 17 Jun 2009 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/designing-infrastructure-buying-car/</guid><description>
&lt;p>Because I happen to be both buying a new car and deploying new infrastructure the realization dawned upon me about how similar these two activities are.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>You start the investigation with some preconceived &amp;quot;gut-level&amp;quot; notions. code: Multiprocess distributed job engine is what I need car : I want a Mazda 3 with &amp;quot;Zoom Zoom&amp;quot;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Everybody has a story about why your choice is bad code: &amp;quot;In my last job I used a python-C++ wrapper from vcron&amp;quot; car : My cousin&amp;quot;s friends brother had a mazda and the engine fell out on 95&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Everybody loves what they have (but its not for you) code: Our feed system rocks, oh but we don&amp;quot;t pull in news every minute car : I love my Civic, oh but I don&amp;quot;t have 3 kids where one of them is 6&amp;quot;2&amp;quot;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Everybody thinks what you currently have is no good code: &amp;quot;Your cache middleware is no good because it can&amp;quot;t run jobs&amp;quot;&amp;quot; car :  &amp;quot;Dude, you can&amp;quot;t drive a Camry and date girls&amp;quot;&amp;quot; (true comment post-divorce)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>** &lt;strong>You usually start this process due to a crash&lt;/strong> **&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>code: User gen data + no cache eviction = FAIL car : SUV from the side + swerve = One less Stop sign.&lt;/p>
&lt;p>So my investigation has started and it is taking interesting twists.   We pull in a weather feed via a RESTish api and the vendor would like us to FTP a large data file instead.  This is clearly a good fit for a multiprocess job engine so that project has kicked off for real.  I&amp;quot;m looking at one of the top open source systems &amp;quot;Job Scheduler&amp;quot;&amp;quot; because that fit all my critericode:  It can spread jobs across multiple machines and give operations some command and control of background systems.  Our ops team is really good at the command line / Solaris thing so having our systems look more like shell scripts and less like java interface implementations will help. I did a good amount of research and made sure that this app was solaris friendly and patted myself on the back for caring about my ops team.  Just the other day I find out that the solaris binary is sparc only and we plan on running this on Solaris/x86.  First threat to my guy choice has manifested.&lt;/p>
&lt;p>On the car front I went to reedman-toll and took the Mazda 3 (stick shift) around their test track with my daughter.  The car was a fun to drive but second gear took me from 5-25mph.  That will be awesome when I&amp;quot;m stuck in traffic (and pissed that I bought a manual rather then an automatic) but limited my sense of control over the gearing.  The point of a stick is to feel that &amp;quot;snick-snick&amp;quot; as you upshift around S curves and downshift into corners. In short there was no &amp;quot;Zoom-Zoom&amp;quot;&lt;/p>
&lt;p>In my youth I would have just deployed my first choice (one day I should blog about when I thought it was a good idea to build a custom accounting program) and bought a car based on first impressions.&lt;/p>
&lt;p>Now that I have less disposable income and more oversight on my engineering decisions am wiser I&amp;quot;ll take some time to really focus on what the needs are.&lt;/p>
&lt;p>I&amp;quot;ll blog more on this later, but I have to work on my project plan for the Alfresco based CMS.&lt;/p>
&lt;p>That was a good choice - Open source, Java, active community - &amp;quot;Zoom Zoom&amp;quot;..&lt;/p></description></item><item><title>Peeling back the onion of stupidity</title><link>https://www.aaronheld.com/post/peeling-back-the-onion-of-stupidity/</link><pubDate>Thu, 07 May 2009 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/peeling-back-the-onion-of-stupidity/</guid><description>
&lt;p>I've mentioned the book &lt;a href="http://www.amazon.com/gp/product/0932633676?ie=UTF8&amp;amp;tag=aarhel-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=0932633676">Adrenaline Junkies&lt;/a>&lt;img src="http://www.assoc-amazon.com/e/ir?t=aarhel-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=0932633676" alt=""> in a previous post and I'm not seeing the value in a common language for discussing problems.&lt;/p>
&lt;p>Today's pattern is the 'Onion of Stupidity'.  This is a common pattern where you build up hack upon workaround upon compromise, inject a little shortsightedness and wind up seeing a good chunk of your effort goes into cleaning it up.  A &lt;a href="http://codeartisan.blogspot.com/" title="Jon Moore's blog">colleague&lt;/a> here promoted the term &amp;quot;technical debt&amp;quot; to describe issues were we these types of issues and help us prioritize them.  I'm thinking that my Onion is more about 'strategy debt'.  The onion is usually built with best intentions at all sides.&lt;/p>
&lt;p>Peeling back the layers of stupidity is tedious and takes time, but cutting through it makes everyone in the room cry.&lt;/p>
&lt;p>I'm sure we have all been here.  I had 2 instances of it today at work, and one with an old friend.  He wanted me to update some joomla modules and I said yes.  I go to ssh and wget the files and find out there is no ssh.  Without that I have to download the files, extract then and upload lots of little ones.  Then I find that some of the original files are edited so the have to be diffed.  Now I have to download the files and diff them.  Then I want to check but can't run it without the database.  I just restored my local ubuntu image and don't yet have MySQL. So I go to install MySQL and don't have connectivity yet between the VirtualBox and osx....&lt;/p>
&lt;p>So the first layer of this Onion that I must peel is to fix Bridged Ethernet.  Or I cut the darn thing and move the site to a real hosting company.&lt;/p>
&lt;p>So while I'm pretty much out of luck on my personal life here at my day job we all got together with a commitment to peel back our layers of issues as a team and focus on building out a solid foundation.  Hopefully the only onions we will have are the ones served on the sliders upstairs.....&lt;/p></description></item><item><title>Just show up</title><link>https://www.aaronheld.com/post/just-show-up/</link><pubDate>Sat, 02 May 2009 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/just-show-up/</guid><description>
&lt;p>Sometimes the answer really isn't that hard.&lt;/p>
&lt;p>We were recently having a lunch conversation and talking about how to get involved in the local tech community. Kevin simply stated &amp;quot;Just show up&amp;quot;.  It was a stunningly simple answer.&lt;/p>
&lt;p>To people that have had the great experience of being involved in the Philly tech scene this seems obvious.  As a Gen 'X'er that moved around the east coast during the dotCom days let me say this is an unual and fantastic community.  Back in the day there was some feeling of elitism and you had to demonstrate some effort to be included in a 'community'.  Its true that a 'noob (great word, best contribution of the 'millenials' so far ;) could show up at the local Linux install day and get some help setting up slackware on left over office equipment, but they were not taken seriously in the 'real' meetings.&lt;/p>
&lt;p>When I moved in I had to throw down my triple homed T1 router built on freeBSD just to get a slice of pizza.&lt;/p>
&lt;p>Things have absolutely changed.  I showed up at the &lt;a href="http://www.indyhall.org/blog/2009/04/09/mashable-indyhall-v20-massive-philly-party-youre-invited/">'mashable.com/Indy hall party'&lt;/a> last night and the converstations were easily flowing.  I sat down at some random table and got into a CMS discussion contrasting my recent Alfresco for the portal action to UPenn's current e-learning on drupal issues.  We talked about Scala v Groovy and I even met the previous manager of one of my developers (Found he also takes credit for John's great work!).  I'm thinking the guy who recommend not using the front brake to stop my motorcycle was from a differnet crowd. (note:  saying that the 10% extra braking of the front wheel stop the bike is not worth the risk of fishtailing is wrong.  Bikes have 2 wheels and 2 brakes for a reason.   I'm not telling you what is right because some things should not be learned from a blog.  Take the &lt;a href="http://msf-usa.org/">MSF course,&lt;/a> please. I don't have many readers here so I'd hate to lose one)&lt;/p>
&lt;p>So in short if you want to be involved, just show up.&lt;/p>
&lt;p>On a related professional note I have been reading an enjoying &lt;a href="http://www.amazon.com/gp/product/0932633676?ie=UTF8&amp;amp;tag=aarhel-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=0932633676">Adrenaline Junkies and Template Zombies: Understanding Patterns of Project Behavior&lt;/a>&lt;img src="http://www.assoc-amazon.com/e/ir?t=aarhel-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=0932633676" alt="">. It is a humorous take on the project management side of software development.  It uses the concept of 'design patterns' to discuss behavours (and solutions).  The one common one that I see professionally is the 'Movie Critic'.  This is the person that shows up 3 months after the project starts with an 'opinion'.  Sometimes you can't just say &amp;quot;where was this opinoin back when we needed it'.  Perhaps these people felt that there was a high barrier of entry to get into the project at an earlier phase?  We have internal blogs, wiki's and even do development co-located around big tables.  Everyone is welcome. People just need to know they are welcome.&lt;/p>
&lt;p>So if there is something you care about please just get up and do it!&lt;/p>
&lt;p>&lt;strong>'Just Show Up'&lt;/strong>&lt;/p>
&lt;p>(except riding a motorcycle, that can mess you up.  Get some in-person professional advice.  99% uptime is not good enough on a bike)&lt;/p>
&lt;script type="text/javascript" src="http://www.assoc-amazon.com/s/link-enhancer?tag=aarhel-20&amp;amp;o=1">&lt;/script>
&lt;p>&lt;img src="http://www.assoc-amazon.com/s/noscript?tag=aarhel-20" alt="" />&lt;/p></description></item><item><title>coupling de-coupled CMS</title><link>https://www.aaronheld.com/post/coupling-de-coupled-cms/</link><pubDate>Mon, 27 Apr 2009 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/coupling-de-coupled-cms/</guid><description>
&lt;p>I'm hip deep in the design of a new CMS to power some large scale sites. The big buzzword going on at this level is around how the CMS products are designed to be 'de-coupled'. Specifically we are talking about decoupling the deliver of the site from the management of the content.&lt;/p>
&lt;p>This is very understandable, as your backend needs can be very different then the portal. The backend CMS has rigid security and workflow concerns and the front-end is optimized to serve pages fast.&lt;/p>
&lt;p>I'm seeing very little talk about the coupling needs of the site structure in terms of the content and this surprises me. The CMS has to have some level of knowledge as to how to front-end uses the content in order to be effective. Our current CMS maintains a concept of a 'portal Model' that reflects the page structure on the site. The CMS can serve multiple sites through different portal models. To me this seems a core need and a clear gap in the industry.&lt;/p></description></item><item><title>Netbeans for HTML-CSS work?</title><link>https://www.aaronheld.com/post/netbeans-for-html-css-work/</link><pubDate>Wed, 10 Dec 2008 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/netbeans-for-html-css-work/</guid><description>
&lt;p>Due to an unfortunate series of work related events I find myself writing php code.  Not only php code, but wordpress php code.  That however is the topic of a later post (as is plugins that edit core code using regex based searches)&lt;/p>
&lt;p>I did the work in textmate but decided to spin up my new Netbeans 6.5 in order to test the subversion functionality.&lt;/p>
&lt;p>Immediately I noticed that Netbeans picked up a tag mismatch and highlighted it nicely:&lt;/p>
&lt;p>[caption id=&amp;quot;attachment_101&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;300&amp;quot; caption=&amp;quot;Netbeans showing off a tag mismatch&amp;quot;]&lt;a href="http://www.aaronheld.com/wp-content/uploads/2008/12/picture-3.png">&lt;img src="https://www.aaronheld.com/assets/posts/images/picture-3-300x273.png" alt="Netbeans showing off a tag mismatch" title="Netbeans HTML error">&lt;/a>[/caption]&lt;/p>
&lt;p>This was enough to impress me and I did a quick google to find netbeans other HTML / Front-end features.&lt;/p>
&lt;p>It now has a nice CSS editor that is comparable to some of the tools I fondly remember from 5 years ago.  The preview and menu driven selectors are easy to work with.  I'd rather have a better code completion like Firebug, but this effort is great to see from a Java dev tool.&lt;/p>
&lt;p>[caption id=&amp;quot;attachment_103&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;300&amp;quot; caption=&amp;quot;Netbeans CSS editor&amp;quot;]&lt;a href="http://www.aaronheld.com/wp-content/uploads/2008/12/netbeans-css-editor.png">&lt;img src="https://www.aaronheld.com/assets/posts/images/picture-5-300x162.png" alt="Netbeans CSS editor" title="netbeans css editor">&lt;/a>[/caption]&lt;/p></description></item><item><title>javaFX sneaks out the door</title><link>https://www.aaronheld.com/post/javafx-sneaks-out-the-door/</link><pubDate>Fri, 05 Dec 2008 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/javafx-sneaks-out-the-door/</guid><description>
&lt;p>Sun released version 1 of javaFX today - &lt;a href="http://www.javafx.com/">http://www.javafx.com/&lt;/a>&lt;/p>
&lt;p>Its a competitor to Adobe Flash and Microsoft Silverlight, but based on the java developer created demos it just does not look complelling enough to matter.&lt;/p>
&lt;p>Adobe had been making some great progress in the Flash virtual machine and the number of advances in Flash10 really impress the coder in me.  As a development manager I'm seeing Actionscript programmers reach an impressive level of maturity, with unit testing, automated builds and solid object design.&lt;/p>
&lt;p>I'm interested enough in this to want to dig in more but no project in my queue comes to mind.  I'm only using Flash now for video players.&lt;/p>
&lt;p>So for now I'm downloading this technology and looking for a problem.......&lt;/p></description></item><item><title>A House With No Front Door Keeps you off the streets</title><link>https://www.aaronheld.com/post/a-house-with-no-front-door-keeps-you-off-the-streets/</link><pubDate>Tue, 25 Nov 2008 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/a-house-with-no-front-door-keeps-you-off-the-streets/</guid><description>
&lt;p>I found an interesting article today.&lt;/p>
&lt;p>&lt;a href="http://www.pragmaticmarketing.com/publications/topics/05/0501sk1" title="Pragmatic Marketing">A House With No Front Door&lt;/a>&lt;/p>
&lt;p>It is written by a product marketing professional lamenting about dealing with 'resource constrained' engineering teams.&lt;/p>
&lt;p>Seeing as how I come from a resource constrained engineering team I thought it was an interesting read.  The premise of the article was the disconnect as described:&lt;/p>
&lt;blockquote>
&lt;p>Perhaps it is my job to get this perspective across to them, and I try to do that, but the gulf between the “feature triage” perspective that many engineers have, and the “holistic” customer or market perspective that is needed is enormous.&lt;/p>
&lt;/blockquote>
&lt;p>So the article goes on to talk about how engineers struggle for workarounds and laments&lt;/p>
&lt;blockquote>
&lt;p>If something is truly necessary, then why is it not worth implementing correctly? Yes, I understand deadlines and resource constraints and marketing, sales and competitive pressures etc, but it is very easy to fall into the habit of providing partial solutions to problems, and laying the burden of what’s missing onto users.&lt;/p>
&lt;/blockquote>
&lt;p>And the final closing argument revolved around the house this persons team would build&lt;/p>
&lt;blockquote>
&lt;p>Imagine if houses were built with this premise, and every time some aspect of the house was discussed, questions about workarounds were raised. You’d end up with a two storey house, that required external ladders to get to the second floor, a fireman’s pole to quickly get down to the first (no wasted floor space inside because of unnecessary staircases), that wouldn’t have a front door (the back door should be sufficient), that had only one big bedroom and closet for everyone (those extra walls and doors cost time and money you know), one bathroom (it would be an outhouse to give equal access from either floor), and only a wood burning stove to both heat the house and to use for cooking (minimizes unnecessary duct work).&lt;/p>
&lt;/blockquote>
&lt;p>The crazy house happens because developers know that they can't give the people what is being ordered, but they do their best to get a roof over their customers heads.  The real question is why did product marketing &lt;strong>order a two story house when they could only afford a ranch?&lt;/strong>.  This would not happen in a house because the builder would simply raise the up front costs.  The recent sub-prime lending issues clearly show how people are willing to pay more then they can afford in order to get what they think they need.  So people that should be in a small ranch wind up being in a 3 story colonial until they go into foreclosure.&lt;/p>
&lt;p>In a business if the developers do what builders did and simply raise the prices and give people what they ask for, then they would go into foreclosure as well.&lt;/p>
&lt;p>Perhaps the real question we should be asking is why do product marketing people continually try to 'give the customers what they want' without getting the resources and money in place to achieve their goal.&lt;/p>
&lt;p>I've been writing software against requirements for over 20 years and have seen this over and over when the product people and business people are not the same human or at least in-sync.&lt;/p>
&lt;p>Scrum and Agile are desinged to solve this by making it a team effort.  So in Scrum it is not the 'developers' that build this Dr Seuss house, but the team.  I think this is why many people fear Scrum. There is no 'justifiable failure'.&lt;/p></description></item><item><title>BarCampPhilly part 2</title><link>https://www.aaronheld.com/post/barcampphilly-part-2/</link><pubDate>Fri, 14 Nov 2008 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/barcampphilly-part-2/</guid><description>
&lt;p>&lt;a href="http://www.arpitonline.com">Arpit&lt;/a> led another session about how and when to use Flash in an Ajax world. One of the attendees was a Microsoft Silverlight manager and was a solid hour of dispelling myths about RIA in general. There is still a large population that thinks Flash/Silverlight are bad for SEO and not enough people know of Adobe's recent collaborations with Google and Microsoft, including project Ichabod that makes Flash more indexable than Ajax (some details here: &lt;a href="http://www.readwriteweb.com/archives/adobe">http://www.readwriteweb.com/archives/adobe&lt;/a>_ichabod_flash_ajax.php). We also talked about how the RIA vs traditional html choice is often made unconsciously before the IA/Design phase and what we need to do in order to help inform that choice. Arpit is going to have a conversation later with a manager from Microsoft concerning Rich Internet Application development in Philadelphia.&lt;/p>
&lt;p>Kevin Fitzpatrick led an afternoon session about &amp;quot;Getting your Ideas Out&amp;quot; that was standing room only by the time the session began. Kevin's premise was simple: You have more to worry from your idea never seeing the light of day than from it being stolen and used by someone else. He encouraged the attendees to put their ideas out as soon as they could and leverage the community to shape it to its final form. While the session was limited to an hour, the excitement in the room could have easily kept the discussion going for hours.&lt;/p>
&lt;p>One of the most interesting part of the event was the repeated references to Frank Eliason and the comcastcares twitter account. In a more that a couple of talks, comcastcares was used as an example on how big companies are now &amp;quot;getting it&amp;quot;, on how Frank's help to one of the attendees has now made her a loyal comcast customer as well as one discussion on how someone on Verizon FIOS was annoyed that they did not have a verizoncares twitter account. One of the attendees then pinged Frank on Twitter and he actually dropped in in person (though none of the CIM team managed to meet him since all this happened with no CIM member around). comcastcares was the biggest discussion topic on the ROI on Social Media talk as well.&lt;/p>
&lt;p>Other sessions we attended included how to get your organization to embrace web standards by Kimberly Blessing, a former AOL employee that led the first standards-compliant redesign of AOL.com back in 2004. Standards are a hot topic as we look for ways to reduce our engineering footprint and reuse our systems better. Standards lead the way for this.&lt;/p>
&lt;p>Our future plans are to keep this community rolling and we are now looking for a monthly venue. I have started talking to our internal HR about opening up a room (perhaps Comcast University) on a regular basis for this group. I'm looking forward to keeping the energy of this event going.&lt;/p></description></item><item><title>BarCampPhilly was a success!!</title><link>https://www.aaronheld.com/post/barcampphilly-was-a-success/</link><pubDate>Sun, 09 Nov 2008 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/barcampphilly-was-a-success/</guid><description>
&lt;p>The &lt;a href="http://www.barcampphilly.org/" title="Bar Camp Philly">BarCamp&lt;/a> happened yesterday and Philly's brightest and most enthusiastic 'interative media' professionals came out in force.  Barcamp is a type of grass roots conference setup by the people bottom up rather then by a company top down.&lt;/p>
&lt;p>I talked a lot, learned a lot, drank a lot and made some friends in the process.&lt;/p>
&lt;p>Each session exceeded my expectations in different ways.  My talk on the how we build and operate &lt;a href="http://www.comcast.net">http://www.comcast.net&lt;/a> was very well received and it was very telling to step up from the weeds and view this creation with my peers.  As much as we need to move forward sometimes we at CIM forget how far we have come.  Since this was an untelevised, ego and marketecture free event we openly discussed what we did right and wrong. Having this talk with people that live through this grind every day is very different then having it with people that learned the 'right way to build websites' from books or blogs.&lt;/p>
&lt;blockquote>
&lt;p>&amp;quot;Don't hire legacy developers, kill legacy systems&amp;quot;&lt;/p>
&lt;p>--My quote of the session&lt;/p>
&lt;p>You guys really work hard, Comcast should hire more developers.&lt;/p>
&lt;p>--Audience quote of the session&lt;/p>
&lt;/blockquote>
&lt;p>From there I went to a &amp;quot;Web Standards' talk given by someone that lived through it at AOL.  Given my challenges of getting standards adopted at Comcast this was also a great learning and sharing session. We discussed what needs to happen in our educational system and industry in order for Standards be become accepted as a core part of webdev and not a 'nice to have'.&lt;/p>
&lt;blockquote>
&lt;p>Who would hire a web developer that does not follow standards?&lt;/p>
&lt;p>--Audience quote of the session&lt;/p>
&lt;/blockquote>
&lt;p>After a quick lunch attempt at a local Indian place (service in 45 min: FAIL) we returned for a talk about innovation.  My intent of this session was a he said / she said comedy routine with &lt;a href="http://arpitmathur.com/">Arpit&lt;/a> where he would play the role of the frustrated developer and I'd be more of the pointy haired boss keeping our hapless developers trudging towards a deadline.  Interesting enough this session redefined the term &amp;quot;Innovation&amp;quot; for me as the talk went in a completely different direction.  By the definition of my peers we have been innovative. Much of our innovation has not been customer facing so it does not fit with the typical management concept of what they expect to see with regard to innovation.&lt;/p>
&lt;p>A very interesting undercurrent was that most people innovate by padding their time or otherwise hiding this effort from their bosses.  I commented that I think this is disrespectful to the bosses and the responses again surprised me.  It turns out that most people feel that the top execs are very cluefull and 'get it' at many levels.  They also feel that the middle management just below them have no clue.  The other key factor in stifling innovation in large organizations is the inherent disrespect across disciplines. For some reason many people think that innovation has to come from their immediate team rather then the larger group.  (So for example the HTML devs have to innovate as opposed to the team consisting of HTML/IA/Design/Biz/QA etc..)&lt;/p>
&lt;p>The other great take home was that the entire crowd was supportive and we all wanted each other to succeed. I never experienced such a positive vibe about Comcast in Philly and how much the tech community was behind us to succeed.  There is nothing in the way of CIM (Comcast Interactive Media).  I do think that we finally have that 'critical mass' of community here in Philly and it is time that the East Coast become known as a center of innovation.  There is some great talent in this region, from us corp developers to the fierce independents at &lt;a href="http://www.indyhall.org/">Indy Hall&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>&amp;quot;We are not the Comcast you know and hate, we are the Comcast you don't know and love&amp;quot;&lt;/p>
&lt;p>--Quote of the session&lt;/p>
&lt;/blockquote>
&lt;p>All this was less then half my day. Stay tuned for more!&lt;/p></description></item><item><title>Specialization is for Insects</title><link>https://www.aaronheld.com/post/specialization-is-for-insects/</link><pubDate>Mon, 20 Oct 2008 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/specialization-is-for-insects/</guid><description>
&lt;p>The other night we had a security issue that came up at 3am. Our combined response toolkit included DNS changes, akamai CDN configuration, adserver updates, javascript, HTML, and lots of good old fashioned interpersonal communication and persuasion. In these days where I'm working with dedicated 'Javascript' engineers that don't read Java and operations people focused on CDN configurations that don't know the application innards the concept of specialization is a concern.&lt;/p>
&lt;p>The individual aspects of a scaled web architecture are each so complex that it is easily a full time job for a person just to keep up in one area. I'm concerned about this because as we spend more time in individual areas we focus less time on the holistic approach. This is my same concern with modern medicine.&lt;/p>
&lt;p>A &lt;a href="http://www.paradox1x.org">friend and colleage&lt;/a> went to a back surgeon and that doctor recommended surgery.  Why?  Because surgeons do surgery.  And they are so steeped in their practice that they elevate it above other options.  Before you generalize on greedy doctors let me tell you about an ops and dev at my shop that discussed for an hour how to handle a redirect.  Ops wanted to handle it at Akamai, and the UI Dev wanted to simply throw a redirect from the template.  When I told this to a middleware engineer he said they are both daft and it should be done in the spring controller. All of these solutions are equally valid, and we can even model the ROI for each.  One of the invisible aspects was the maintainability, simply put I asked them which area is the least cluttered for with redirect rules. (At this point they all pointed away from each other - but that is the topic of another post ;)&lt;/p>
&lt;p>Perhaps this was an hour well spent, perhaps we should have spent 2minutes and moved on to the next ticket for the remaining 58 minutes.  But my point is that I'm seeing more evidence of the warrior giving way to the soldier.  It has been said that American companies excel due to our capacity to place a bureaucracy  to take the reins from early innovators.  I actually mean that as a complement, I'm impressed by the founders of Comcast (where I work).  Three early innovators build a solid foundation and had the forthought to entrust the growth to a different set of people.&lt;/p>
&lt;p>This is a fitting concept here in Philadelphia where our founding fathers included such non-specialized geniuses such as Ben Franklin.  Our founding fathers innovated a new government and then handed it to the ultimate bureaucracy - the Federal Government.&lt;/p>
&lt;p>In closing let me close this thought with the words of Heinlein, who said what I said - but with the expertise of a dedicated writer:&lt;/p>
&lt;blockquote>
&lt;p>A human being should be able to change a diaper, plan an invasion, butcher a hog, conn a ship, design a building, write a sonnet, balance accounts, build a wall, set a bone, comfort the dying, take orders, give orders, cooperate, act alone, solve equations, analyze a new problem, pitch manure, program a computer, cook a tasty meal, fight efficiently, die gallantly. Specialization is for insects. -Robert A. Heinlein&lt;/p>
&lt;/blockquote>
&lt;p>Credit to &lt;a href="http://escapepod.org/2008/10/11/ep179-arties-arent-stupid/">http://escapepod.org/2008/10/11/ep179-arties-arent-stupid/&lt;/a> for putting this thought into my head.&lt;/p></description></item><item><title>reminiscing the cache wars</title><link>https://www.aaronheld.com/post/reminiscing-the-cache-wars/</link><pubDate>Mon, 14 Jul 2008 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/reminiscing-the-cache-wars/</guid><description>
&lt;p>Recently at work people are discussing the merits of different cache servers.  That brought back memories of my days as the R&amp;amp;D Product lead for a line of cache systems.&lt;/p>
&lt;p>The high point was participating in the two week &lt;a href="http://polygraph.ircache.net/Results/cacheoff-2/">&amp;quot;Cache Bake Off&amp;quot;&lt;/a> hosted by NLANR (the team broke off and formed &lt;a href="http://www.measurement-factory.com">The Measurement Factory&lt;/a>.  This was great fun where engineering teams from major companies got together to have thier systems pounded in a no holds barred performance test. I was working for a hardware company that had thier sights firmly set of being the leading tier two vendor (Tier one was considered too competative to take exponential growth risks).  I think my gear nailed it by achieving 80% of the performance of the leadning brand at 1/5 the price.  (And you could cluster 2 for less then half the cost and have over 50% better performance - if you order now you can get fee overnight shipping).&lt;/p>
&lt;p>The test was run using software called web-polygraph running a 'workload'&lt;/p>
&lt;p>The workload was considered to represent standard web traffic and put together by some sharp guys.&lt;/p>
&lt;blockquote>
&lt;p>One difficult part of this benchmark (and indeed most) was to develop the proper workload. Real-world Web traffic is incredibly complicated, both to understand and to simulate. Many workload attributes are well understood by themselves, but not when combined with each other. For example, we have a clear idea of real-world object size distributions. But how does object size combine with popularity and content-type? Are popular HTML objects larger, smaller, or the same as unpopular ones?&lt;/p>
&lt;/blockquote>
&lt;p>The per page breakdown was: &lt;code>Type Percentage Reply Size Cachability Image 65.0% exp(4.5KB) 80% HTML 15.0% exp(8.5KB) 90% Download 0.5% logn(300KB,300KB) 95% Other 19.5% logn(25KB,10KB) 72%&lt;/code>&lt;/p>
&lt;p>Surprisingly this mix is pretty close to our current page patterns.&lt;/p>
&lt;p>Probably the best part about this test was the scientific way it was run.  There was no marketing aspect to in the charts and numbers that got published and once you entered you agreed to let them make your results known to the world - good or bad.&lt;/p>
&lt;p>I wonder how many companies now would have enough faith in thier offering to allow objective test data to be released without markting/PR oversight?&lt;/p></description></item><item><title>the trifecta of personal projects</title><link>https://www.aaronheld.com/post/the-trifecta-of-personal-projects/</link><pubDate>Mon, 09 Jun 2008 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/the-trifecta-of-personal-projects/</guid><description>
&lt;p>The joys of home ownership pressing demands at work have stifled my personal innovation time. Sometime in the last millennium I used be enjoy writing exploratory projects and releasing libraries that others may find useful.&lt;/p>
&lt;p>Over the last few months I've been looking for inspiration for a project that would help me explore some 'search' related ideas that have been bouncing in my head.&lt;/p>
&lt;p>I came across a project idea that represents the perfect personal trifecta!&lt;/p>
&lt;ol>
&lt;li>
&lt;p>It involves a technology I'm currently interesting in learning&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It solves a real world problem that affects me (and many more like me ;) personally&lt;/p>
&lt;/li>
&lt;li>
&lt;p>My mom likes it&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>I have the domain name, I have the technology, don't have a UI worth showing and absolutely no features work yet! But soon I will unveil this and learn if being desperate to use my mother for innovations works.&lt;/p></description></item><item><title>The real meaning of agility</title><link>https://www.aaronheld.com/post/the-real-meaning-of-agility/</link><pubDate>Sat, 31 May 2008 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/the-real-meaning-of-agility/</guid><description>
&lt;p>Agility is one of the most abused terms in my profession.&lt;/p>
&lt;p>Recent events in my day job have caused me to rethink what agility means.  We have a very elegant, loosely coupled system that allows us to build entire sections of our website in hours.  The framework handles everything from CDN integration to doing automated profiling every build.&lt;/p>
&lt;p>Software engineers have to be good at identifying the bottleneck, and over the past few days I saw how the larger teams ability to react mattered much more then the codebase itself.&lt;/p>
&lt;p>This is a topic I'll have to explore after some rest&lt;/p></description></item><item><title>SpringSource - proving once again Java doesn't get the web</title><link>https://www.aaronheld.com/post/springsource-proving-once-again-java-doesnt-get-the-web/</link><pubDate>Thu, 01 May 2008 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/springsource-proving-once-again-java-doesnt-get-the-web/</guid><description>
&lt;p>I just read an article in a java trade mag entitled: &lt;a href="http://java.sys-con.com/read/557307.htm" title="Syscon on Java">SpringSource CEO: &amp;quot;The Future of Enterprise Java is Clear and Bright&amp;quot;&lt;/a>&lt;/p>
&lt;p>The premise sounds positive.  Basically they took OSGI, Spring and threw it on Tomcat as a web server.  The idea of being able to deploy OSGI bundles with the bag of beans development style of Spring is really compelling.&lt;/p>
&lt;p>What this negative post is about is how they still don't get the 'web'.  My biggest issue with Java web development is that not enough attention is paid to modern web basics.  The very first thing that I noticed on the SpringSource website was the 15 year old style url.&lt;/p>
&lt;p>&lt;a href="http://www.springsource.com/web/guest/home">http://www.springsource.com/web/guest/home&lt;/a>&lt;/p>
&lt;p>what is with the /web/guest/home for the homepage?  That is really bad SEO mojo&lt;/p>
&lt;p>The idea of bundles that you can drop in for added functionality is fantastic, but you hit an ugly query string laden url like:&lt;/p>
&lt;p>&lt;a href="http://www.springsource.com/repository/app/library/version/detail?name=org.apache.myfaces&amp;amp;version=1.2.2">http://www.springsource.com/repository/app/library/version/detail?name=org.apache.myfaces&amp;amp;version=1.2.2&lt;/a>&lt;/p>
&lt;p>as opposed to the far more buzzword complient library of plugins for something like django:&lt;/p>
&lt;p>&lt;a href="http://djangoplugables.com/projects/django-compress/">http://djangoplugables.com/projects/django-compress/&lt;/a>&lt;/p>
&lt;p>While the Java page shows you the really easy lines of Maven xml to paste into your pom, the python based django system talks about the usefulness of the actual bundle you are looking at.&lt;/p>
&lt;p>And compare the old school search page of:&lt;/p>
&lt;p>&lt;a href="http://www.springsource.com/repository/app/search">http://www.springsource.com/repository/app/search&lt;/a>&lt;/p>
&lt;p>to the happiness of a large input box with realtime results on:&lt;/p>
&lt;p>&lt;a href="http://djangoplugables.com/repositories/">http://djangoplugables.com/repositories/&lt;/a> At least this is better then the time I read the Jython website and was greeted by a 'blink' tag&lt;/p></description></item><item><title>Rest as a boring servlet</title><link>https://www.aaronheld.com/post/rest-as-a-boring-servlet/</link><pubDate>Tue, 22 Apr 2008 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/rest-as-a-boring-servlet/</guid><description>
&lt;p>A coworker whipped up a generic REST interface for any Ruby on Rails activerecord (data model).  What he described (in 5 minutes) was a nice implementation.  I wanted see how the generic django REST interface was coded.&lt;/p>
&lt;p>&lt;a href="http://code.google.com/p/django-rest-interface/">http://code.google.com/p/django-rest-interface/&lt;/a>&lt;/p>
&lt;p>I was pleasantly surprised to realize that they Python developers simply used the normal form processing to handle rest and didn't invent a new paradigm.&lt;/p>
&lt;p>On an early project we tried to implement RESTlet for a java based REST application.  Under load we saw some strange problems and the code was reverted to normal servlets without too much pain.&lt;/p>
&lt;p>The beauty of REST is its simplicity, yet there is so much energy being expended to 'simplify' it.&lt;/p>
&lt;p>The real magic is to standardize on sending XML or JSON rather then url encoded data of an http form POST.&lt;/p></description></item><item><title>csv to xml via python</title><link>https://www.aaronheld.com/post/cvs-to-xml-python/</link><pubDate>Tue, 15 Apr 2008 00:00:00 +0000</pubDate><guid>https://www.aaronheld.com/post/cvs-to-xml-python/</guid><description>
&lt;p>Today at work our &lt;a href="http://arpitonline.com">main Flash developer&lt;/a> asked me about expanding his skills and learning either Ruby or Python. My personal preference is towards python but ruby has its place. Flash is really doing well in the Java/Enterprise space lately so I went that way.&lt;/p>
&lt;p>Most of the Flash backend in our work is xml based so XML was on my mind anyway. Recently we needed to mock up a xml data data file for a project while the real APIs are being completed. We had the data in a csv file so we asked some developers to whip up a xml file.&lt;/p>
&lt;p>As I started writing up the ticket I started thinking it would be easier to just do it myself.&lt;/p>
&lt;p>Given the speed of python development I was right!.&lt;/p>
&lt;p>#!/usr/bin/env python
&amp;quot;&amp;quot;&amp;quot;
cvs2xml.py&lt;/p>
&lt;p>Created by Aaron Held on 2008-04-11.
Make the xml from the csv using dom and other three letter acronyms
&amp;quot;&amp;quot;&amp;quot;import sys,os
import unittes
import csv&lt;/p>
&lt;p>from pprint import pprint
import xml.etree.ElementTree as ET&lt;/p>
&lt;p>class Cvs2xml:
def loadCSV(self):
&amp;quot;&amp;quot;&amp;quot;Load the data and return a list of maps&amp;quot;&amp;quot;&amp;quot;
reader = csv.DictReader(open(r&amp;quot;input.csv&amp;quot;,'r'))
rows = []
for row in reader:
rows.append(row)
return rows&lt;/p>
&lt;p>def mappings(self):
&amp;quot;&amp;quot;&amp;quot;
Map csv file to xml field names
&amp;quot;&amp;quot;&amp;quot;
mapping = { 'id':&amp;quot;store_number&amp;quot;
return mapping&lt;/p>
&lt;p>def createXML(self,listofrows):
&amp;quot;&amp;quot;&amp;quot;Turn lists into xml
&amp;quot;&amp;quot;&amp;quot;
root = ET.Element(&amp;quot;stores&amp;quot;)
for row in listofrows:
store = ET.SubElement(root, &amp;quot;store&amp;quot;)
for xml_field in row.keys():
csv_field = self.mappings().get(xml_field,xml_field)
ET.SubElement(store, xml_field).text = row.get(csv_field,&amp;quot;&amp;quot;)
print(ET.tostring(root))
#tree = ET.ElementTree(root)
#tree.write(&amp;quot;output.xml&amp;quot;)&lt;/p>
&lt;p>class Cvs2xmlTests(unittest.TestCase):
def setUp(self):
pass&lt;/p>
&lt;p>def testRun(self):
'''Lazy way of main()'''
cvs2xml = Cvs2xml()
rows = cvs2xml.loadCSV()
cvs2xml.createXML(rows)&lt;/p>
&lt;p>if __name__ == '__main__':
unittest.main()&lt;/p></description></item></channel></rss>